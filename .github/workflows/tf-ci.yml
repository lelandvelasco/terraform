name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{secrets.CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.MY_TEST_ENVIRONMENT}}
      ARM_TENANT_ID: ${{secrets.TENANT_ID}}

    #Use bash shell
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform"

    # Checks that all Terraform configuration files adhere to a canonical format
    #- name: 'Terraform Format'
    #  uses: hashicorp/terraform-github-actions@master
    #  with:
    #    tf_actions_version: 0.14.8
    #    tf_actions_subcommand: 'fmt'
    #    tf_actions_working_dir: "./terraform"

    # Validates All Terraform configuration files
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform"

    # Generates an execution plan for Terraform
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform"
